
model:
  base_learning_rate: 1.0e-6
  target: refnet.models.trainer.colorizer.ColorizerTrainer
  params:
    linear_start: 0.00085
    linear_end: 0.0120
#    parameterization: v
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: reference
    control_key: control
    image_size: 64
    channels: 4
    scale_factor: 0.18215
    use_ema: false
    #ucg_rate: 0.5             for v1-version fine-tuning, aprroximately 60,000 steps with learning rate 1e-5 from the noisy-trained model.
    ucg_rate: 0.1            
    noisy_training: true       # approximately 130,000 steps with learning rate 1e-5 from a pre-trained T2I model. We use WD1.4: https://huggingface.co/hakurei/waifu-diffusion
    offset_noise_level: 0.05

    unet_config:
      target: refnet.modules.unet.MultiDualCondUNet
      params:
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 1024
        use_checkpoint: True

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult: [1, 2, 4, 4]
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0

    cond_stage_config:
      target: refnet.modules.embedder.FrozenOpenCLIPImageEmbedder
      params:
        arch: ViT-H-14

    control_encoder_config:
      target: refnet.modules.encoder.MultiEncoder
      params:
        in_ch: 3
        model_channels: 320
        ch_mults: [1, 2, 4, 4]

    proj_config:
      target: torch.nn.Identity

dataloader:
  class: ZipTripletLoader
  params:
    transform_list:
      flip: true
      rotate: false
      resize: true
      jitter: false
      rotate_range: 45
    json_key: image_list
    refset_key: color
    load_size: 544
    crop_size: 512     # crop images to (crop_size, crop_size), randomly crop images when crop_size < load_size
    keep_ratio: false
    inverse_grayscale: true
  shuffle: true
